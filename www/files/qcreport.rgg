<rgg> 
    <h3 text="Agilent Single Channel Expression Microarray QC Report" aligment="center" span="full"/>
    <separator label="Working Directory" span="full"/>
    setwd(<filechooser extensions="csv" fileselection-mode="directories-only"/>)
    require(limma)
    require(gdata)
    require(pamr)
    
    <gaprow height="7"/>
    <separator label="Target File" span="full"/>    
    
    targetfile = <targetfileeditor span="full"/>
    
    G = read.maimages(targetfile[,1],columns = list(G = "gMeanSignal", Gb = "gBGUsed", R = "gProcessedSignal", Rb ="gIsPosAndSignif"),
    annotation= c("Row", "Col", "FeatureNum", "ProbeUID", "ControlType", "ProbeName", "GeneName", "SystematicName"))
    
    <gaprow height="7"/>
    <separator label="Background Correction and Normalisation" span="full"/>
    offsetvalue = <group>
        <hbox>
            <label text="Offset:"/>
            <checkbox id="c1" label="Max negative value" return-value-by-selected = "max(G$Gb-G$G)+1" return-value-by-notselected=""/>
            <textfield label = "  or set here:" data-type="numeric" size="8" enabled="${not c1.selected}"/>
        </hbox>
        <gaprow height="2"/>
        Gbc = backgroundCorrect(G, offset=offsetvalue)
        norm = normalizeBetweenArrays(
        <hbox>
            <checkbox span="2" label="Log2 transformation" return-value-by-selected = "log2(Gbc$G)" return-value-by-notselected="Gbc$G"/>,
            method=<combobox label="Normalisation method" span="full" items="none,scale,quantile,Aquantile,Gquantile,Rquantile,Tquantile,vsn"/>
        </hbox>
        )
    </group>
    
    <gaprow height="7"/>
    <separator label="Output" span="full"/>
    <group>
        <hbox>
            isBoxplot = <checkbox label="Box plot"/>
            isHeatMap = <checkbox id="c2" label="Heat map"/>
            isPcPlot = <checkbox label="PC-plot"/>
        </hbox>
        <gaprow height="2"/>
        filetype = <combobox label="File type" items="ps,jpg,pdf"/>
        
        if(isBoxplot){
        postscript(paste("boxplots",filetype,sep="."))
        par(mfrow=c(1,2))
        boxplot(log2(G$G)~col(G$G), names=paste(G$targets$chip, G$targets$array, sep='_'), las=2, main='before Normalisation')
        boxplot(norm~col(norm), names=paste(G$targets$chip, G$targets$array, sep='_'), las=2, main='after Normalisation')
        dev.off()
        }    
        <gaprow height="2"/>
        if(isHeatMap){
        postscript(paste("hm",filetype,sep="."))
        <gaprow height="2"/>
        <label text="Number of randomly selected genes for clustering:" span="full"/>
        heatmap(norm[sample(1:nrow(norm),
    </group> 
    <slider min="0" max="45000" default-value="5000"
            paint-ticks="false" paint-labels="false" paint-value="true"
            span="full" />
    ), ], cexCol=0.5, labCol=as.character(G$targets$pat))
    
    dev.off()
    }
    
    if(isPcPlot){
    postscript(paste("pc12",filetype,sep="."))
    plot(prcomp(t(norm))$x[,1:2], col=as.numeric(G$targets$pat))
    dev.off()
    }
</rgg>

