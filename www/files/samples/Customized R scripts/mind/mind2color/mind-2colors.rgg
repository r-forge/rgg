<rgg>
#remembering objects currently in workspace
objects.before = objects()

################################################################################
################################################################################
##### 1. RGG CODE                                                ###############
################################################################################
################################################################################

##### 1.1. Tool name                                             ###############
#Microarray Import and Normalization Device
<h3 text="Microarray Import and Normalization Device (MIND)" alignment="center" span="full"/>
<h4 text="for dual-color arrays" alignment="center" span="full"/>
################################################################################

##### 1.2. Short description                                     ###############
<separator label="Description"/>
<label text="The MIND is an easy-to-use but powerful GUI for microarray import."/>
<separator/>
<gaprow height="3"/>
################################################################################

##### 1.3. Data import                                           ###############
##data-range: ; default-value: ; description: microarray importer
<maimporter id="ma" var="ma"/>
################################################################################

##### 1.4. Analysis                                              ###############
#_____VSN normalization________________________________________________________#
<group>
	<hbox>
		##data-range: T,F; default-value: F; description: should vsn normalization be performed?
		<checkbox var="doVSN" id="vsn" label="perform VSN normalization" selected="F"/>
	</hbox>
	<label text="Depending on the size of the data, this can take a long time. Note that background correction will default to 'subtract' automatically." span="2"/>
</group>
#______________________________________________________________________________#

#_____Background correction____________________________________________________#
<separator label="Background Correction"/>
<group>
	##data-range: none,subtract,half,minimum,movingmin,edwards,normexp; default-value: subtract; description: Background correction method for function backgroundCorrect (limma)
	<combobox var="bgCorrMethod" label="Method: " items="none,subtract,half,minimum,movingmin,edwards,normexp" selected-item="subtract" enabled="${!vsn.selected}"/>
</group>
<label text="Please note that the options 'Edwards' and 'Normexp' may produce long calculation times depending on the scale of your experiment."/>
<group>
	<label text="Offset: "/>
	##data-range: T,F; default-value: F; description: Add minimum of all negative corrected values +1
	<radiobutton var="doSelectMinOffset" label="add minimum of all negative corrected values +1" button-group="offset" span="full" selected="F" enabled="${!vsn.selected}"/>
	<group>
		<hbox>
			##data-range: T,F; default-value: T; description: Select an own offset?
			<radiobutton var="doSelectCustomOffset" id="offset" label="add" button-group="offset" selected="T" enabled="${!vsn.selected}"/>
			##data-range: ; default-value: ; description: Enter the desired offset
			<textfield var="bgCorrOffset" label="value:" data-type="numeric" default-value="0" enabled="${offset.selected and offset.enabled}"/>
		</hbox>
	</group>
</group>
#______________________________________________________________________________#

#_____Print-tip layout_____________________________________________________________#
<separator label="Print-tip layout"/>
<group>
##data-range: T,F; default-value: T; description: Print tip layout or not?
	<radiobutton var ="nolayout" label="no layout" selected="T" span="full" button-group="layout" enabled="${!vsn.selected}"/>
	##data-range: T,F; default-value: F; description: Print tip layout or not?
	<radiobutton id="customlayout" var="customLayout" label="custom layout: " span="full" button-group="layout" enabled="${!vsn.selected}"/>
	<group>
		<hbox>
			<label text="          There are "/>
			##data-range: ; default-value: ; description: Enter number of grid rows
			<textfield var="ngrid.r" label=" " data-type="numeric" default-value="0" enabled="${customlayout.selected and customlayout.enabled}"/>
			<label text="grid rows and"/>
			##data-range: ; default-value: ; description: Enter number of grid columns
			<textfield var="ngrid.c" label=" " data-type="numeric" default-value="0" enabled="${customlayout.selected and customlayout.enabled}"/>
			<label text="grid columns"/>
			<label text="on the arrays" enabled="${customlayout.selected}"/>
		</hbox>
		<hbox>
			<label text="          and"/>
			##data-range: ; default-value: ; description: Enter number of spot rows (per grid element)
			<textfield var="nspot.r" label=" " data-type="numeric" default-value="0" enabled="${customlayout.selected and customlayout.enabled}"/>
			<label text="rows and"/>
			##data-range: ; default-value: ; description: Enter number of spot columns (per grid element)
			<textfield var="nspot.c" label=" " data-type="numeric" default-value="0" enabled="${customlayout.selected and customlayout.enabled}"/>
			<label text="columns"/>
			<label text=" of spots in each grid." enabled="${customlayout.selected and customlayout.enabled}"/>
		</hbox>
	</group>
</group>
#______________________________________________________________________________#

#_____Normalization within arrays______________________________________________#
<separator label="Normalization within arrays"/>
<group>
	##data-range: loess,printtiploess,median,none,composite,robustspline; default-value: loess; description: Normalization within the arrays
	<combobox var="normWithinMethod" label="          Method:" items="loess,printtiploess, median, none, composite, robustspline" selected-item="loess"/>
</group>
#______________________________________________________________________________#

#_____Normalization between arrays_____________________________________________#
<separator label="Normalization between arrays"/>
<group>
	##data-range: quantile,scale,none,Aquantile,Gquantile,Rquantile; default-value: quantile; description: Normalization between the arrays
	<combobox var="normBetweenMethod" label="          Method:" items="quantile,scale,none,Tquantile,Aquantile,Gquantile,Rquantile"/>
</group>
#______________________________________________________________________________#

#_____Output___________________________________________________________________#
<separator label="Create Output" span="full"/>
##data-range: T,F; default-value: F; description: Write R Objects into working directory (as .RData files)
<checkbox var="returnRObjects" label="write R Objects into working directory" selected="F"/>
##data-range: T,F; default-value: F; description: Write R Objects into working direcotry (as tab-separated files)
<checkbox var="returntabfiles" label="write R Objects into working directory as tab-separated files" selected="F"/>
<separator span="full"/>
#______________________________________________________________________________#

#_____Report creation__________________________________________________________#
<separator label="Report creation"/>
<group>
	<hbox>
		##data-range: T,F; default-value: F; description: Should a report be created?
		<checkbox id="doReport" var="createReport" label="create report: " selected="F" span="full"/>
		##data-range: ; default-value: ; description: Specify the destination folder for the MIND-report
		<filechooser var="reportfolder" label="Report folder: " fileselection-mode="directories-only" enabled="${doReport.selected}"/>
	</hbox>
</group>
<label text="Please select covariates for labelling plots by choosing the appropriate column names in the phenoData." span="full"/>
<group>
	<hbox>
		##data-range: T,F; default-value: F; description: Custom boxplot labels?
		<checkbox id="chooseBoxlabel" var="chooseBoxlabel" label="custom boxplot labels" selected="F" enabled="${doReport.selected}"/>
		##data-range: ; default-value: ; description: Select custom boxplot labels
		<combobox var="boxlabels" label="annotation: " items="${ma.targetfileheader}" enabled="${chooseBoxlabel.selected and chooseBoxlabel.enabled}"/>
	</hbox>
</group>
<group>
	##data-range: T,F; default-value: T; description: Create MA plots for each single array?
	<checkbox var="doMAplots" label="create MA plots (this may take some time)" selected="T" span="4" enabled="${doReport.selected}"/>
</group>
<group>
	<hbox>
		##data-range: T,F; default-value: F; description: Use covariate for heatmaps?
		<checkbox id="useheatcov" var="useheatcov" label="Use covariate for heatmaps " selected="F" enabled="${doReport.selected}"/>
		##data-range: ; default-value: ; description: Select custom heatmap labels
		<combobox var="heatcov" label="covariate: " items="${ma.targetfileheader}" enabled="${useheatcov.selected and useheatcov.enabled}"/>
	</hbox>
</group>
<group>
	<hbox>
		##data-range: T,F; default-value: F; description: Color the Principal Components plot?
		<checkbox var="doPCcolors" id="doPCcolors" label="Color PCplot" selected="F" enabled="${doReport.selected}"/>
		##data-range: ; default-value: ; description: Select labels for pcplot
		<combobox var="pcgroup" label="corresponding to covariate: " items="${ma.targetfileheader}" enabled="${doPCcolors.selected and doPCcolors.enabled}"/>
		##data-range: 2,3,4,5,6,7; default-value: 2; description: Number of components for PC plot
		<combobox var="pcncomp" label="Number of components: " items="2,3,4,5,6,7" data-type="numeric" enabled="${withPCcolor.selected and withPCcolor.enabled}"/>
		</hbox>
</group>
<separator/>
#______________________________________________________________________________#
################################################################################

################################################################################
################################################################################
##### 2. R SCRIPT                                                ###############
################################################################################
################################################################################

##### 2.1. Tool name                                             ###############
#Microarray Importing and Normalization Device
################################################################################

##### 2.2. Short description                                     ###############
#The Microarray Importing and Normalization Device (MIND) is a GUI for R 
#which prepares microarray data for subsequent analysis by creating an
#expressionSet object of the normalized data.
################################################################################

##### 2.3. Package installation                                  ###############
#list of installed packages
installed.pkgs = installed.packages()

#list of required packages
required.BioCon.pkgs = c("Biobase","limma","genefilter","geneplotter","latticeExtra","arrayQualityMetrics")
required.pkgs = c("R2HTML","impute")

#finding missing packages
BioCon.toBeInstalled = required.BioCon.pkgs[!(required.BioCon.pkgs %in% installed.pkgs[,1])]
toBeInstalled = required.pkgs[!(required.pkgs %in% installed.pkgs[,1])]

#installing missing packages (if possible)
if (length(BioCon.toBeInstalled) != 0){
	source("http://bioconductor.org/biocLite.R")
	biocLite(BioCon.toBeInstalled)
}
if (length(toBeInstalled) != 0){
	install.packages(toBeInstalled,repos = "http://cran.r-project.org")
}

#including packages
library("limma")
library("arrayQualityMetrics")
source(paste(rgghome,"script","createReport2color.r",sep="/"))
################################################################################

##### 2.4. Data import                                           ###############
#Find the column with the filenames in it
rowvar = (1:ncol(ma$targetfile))[grep("filename",colnames(ma$targetfile), ignore.case=TRUE)]
if(!exists("RG")){
	RG=read.maimages(files=ma$targetfile[,rowvar], source=ma$source, path=ma$path,  annotation=ma$annotation, other.columns=ma$other.columns)
}
################################################################################

##### 2.5. Analysis                                              ###############
#_____Background correction____________________________________________________#
if(!doVSN){
	#background correct
	bgCorrectedRG = limma::backgroundCorrect(RG,method=bgCorrMethod,offset=0,verbose=T)
	if(exists("doSelectMinOffset")){
		if(doSelectMinOffset){
			bgCorrOffset = -min(bgCorrectedRG$G,bgCorrectedRG$R,0)+1
		}
	}
	#add offset
	bgCorrectedRG = limma::backgroundCorrect(bgCorrectedRG,method="none",offset=bgCorrOffset)
}else{
	#if VSN is specified, background correction defaults to subtract
	bgCorrMethod="subtract"
	bgCorrectedRG = limma::backgroundCorrect(RG,method=bgCorrMethod,0)
}
#______________________________________________________________________________#

#_____Print-tip layout_________________________________________________________#
if(exists("customLayout")){
	if(customLayout){
		#if a custom layout is specified, add it before normalizing
		bgCorrectedRG$printer = list(ngrid.r=ngrid.r,ngrid.c=ngrid.c,nspot.r=nspot.r,nspot.c=nspot.c)
		RG$printer = bgCorrectedRG$printer
	}
}
#______________________________________________________________________________#

#_____Normalization within arrays______________________________________________#
if(!doVSN){
	MA = normalizeWithinArrays(bgCorrectedRG, method=normWithinMethod)
}else{
	vsnedRG = justvsn(bgCorrectedRG,verbose=T)
	normWithinMethod="none"
	#justvsn returns an NChannelSet, making a MAList out of it
	MA = new("MAList",list(M=(exprs(channel(vsnedRG,"R"))-exprs(channel(vsnedRG,"G"))),A =(exprs(channel(vsnedRG,"R"))+exprs(channel(vsnedRG,"G")))/2))
}
#______________________________________________________________________________#

#_____Normalization between arrays_____________________________________________#
normMA = normalizeBetweenArrays(MA, method=normBetweenMethod)
#______________________________________________________________________________#

#_____NChannelSet and ExpressionSets(of M-values) creation_____________________#
row.names = ma$targetfile[[rowvar]]
pData = ma$targetfile[-rowvar]
attr(pData, "row.names") = as.character(row.names)

rownames(pData)=row.names

metadata = data.frame(labelDescription=rep("no description entered",times=length(colnames(pData))),row.names = colnames(pData))
phenoData = new("AnnotatedDataFrame", data = pData, varMetadata = metadata)

featureData = new("AnnotatedDataFrame", data = RG$genes)
assayData = with(RG, assayDataNew(R=R, G=G, Rb=Rb, Gb=Gb))

preprocessing = list(backgroundcorrection="none", offset=0, transformation="none" ,norm.within="none",norm.between="none") 
experiment = new("MIAME", preprocessing=preprocessing)
data.NSet = new("NChannelSet",assayData = assayData,featureData = featureData,phenoData = phenoData,experiment=experiment)

#if log2 produces -Inf values (if argument is 0), set them NA
log2R = log2(bgCorrectedRG$R)
log2R[log2R == -Inf] = NA
log2G = log2(bgCorrectedRG$G)
log2G[log2G == -Inf] = NA

exprs = log2R-log2G
colnames(exprs)=row.names
preprocessing = list(backgroundcorrection=bgCorrMethod, offset=bgCorrOffset, transformation="log2 ratios", norm.within="none", norm.between="none")
experiment = new("MIAME", preprocessing=preprocessing)
data.eSet = new("ExpressionSet",exprs=exprs, featureData = featureData, phenoData=phenoData, experiment=experiment)

if(doVSN){
	trafo = "glog2 (vsn) ratios"
}else{
	trafo = "log2 ratios"
}

preprocessing = list(backgroundcorrection=bgCorrMethod, offset=bgCorrOffset, transformation=trafo, norm.within=normWithinMethod, norm.between=normBetweenMethod) 
experiment = new("MIAME", preprocessing=preprocessing)
colnames(normMA$M)=row.names
data.normalized.eSet = new("ExpressionSet", exprs=normMA$M, featureData = featureData, phenoData=phenoData, experiment=experiment)

#______________________________________________________________________________#

#_____Output___________________________________________________________________#
if(returnRObjects){
	save("data.eSet",file="data-eSet.RData")
	save("data.normalized.eSet",file="data-normalized-eSet.RData")
}

if(returntabfiles){
	write.table(exprs(data.eSet),file="data-expressions.txt",row.names=T,col.names=NA,sep="\t",na="NA")
	write.table(exprs(data.normalized.eSet),file="data-normalized-expressions.txt",row.names=T,col.names=NA,sep="\t", na="NA")
	write.table(phenoData(data.eSet)@data,file="data-targetfile.txt",row.names=T,col.names=NA,sep="\t",na="NA")
}
#______________________________________________________________________________#
################################################################################

################################################################################
################################################################################
##### 3. REPORT                                                  ###############
################################################################################
################################################################################

##### 3.1. Report creation                                       ###############
if(!useheatcov)
	heatcov="none"

if(!doPCcolors)
	pcgroup="none"
	
if(!chooseBoxlabel)
	boxlabels="colnames"

if(createReport)
	createReport2color(MA,normMA,data.eSet,data.normalized.eSet,rgghome=rgghome,reportfolder=reportfolder,target=ma$path,bgCorrMethod,bgCorrOffset,normWithinMethod,normBetweenMethod,heatcov,boxlabels=boxlabels,pcgroup=pcgroup,pcncomp=as.integer(pcncomp),trans=trafo,maplots=TRUE)
################################################################################

#Specify objects which should stay during script
objects.stay = c("MA","normMA","data.eSet","data.normalized.eSet")

objects.after = c(objects.before,objects.stay)

#removing 'temporary' objects
remove(list=objects()[!(objects() %in% objects.after)])
</rgg>