/*
 * RGGDialog.java
 *
 * Created on 3. Dezember 2007, 03:32
 */
package at.ac.arcs.rgg.jgr;

import at.ac.arcs.rgg.RGG;
import com.jgoodies.forms.builder.ButtonBarBuilder;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.rosuda.JGR.JGR;
import org.rosuda.JGR.editor.Editor;

/**
 *
 * @author  ilhami visne
 */
public class RGGDialog extends javax.swing.JDialog {

    private RGG rgg;
    private Log log = LogFactory.getLog(RGGDialog.class);
    private File rggFile;

    /** Creates new form RGGDialog */
    public RGGDialog(File rggFile, java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.rggFile = rggFile;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rggScrollPane = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.BorderLayout(5, 0));
        getContentPane().add(rggScrollPane, java.awt.BorderLayout.CENTER);
        buildRGG(rggFile);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void buildRGG(File rggxml) {
        JPanel panel = initRGGPanel(rggxml);
        rggScrollPane.setViewportView(panel);
        getContentPane().add(getButtonBar(), java.awt.BorderLayout.SOUTH);
    }

    private JPanel initRGGPanel(File rggxml){
        try {
            rgg = RGG.newInstance(rggxml);
            return rgg.buildPanel(true, false);            
        } catch (Exception ex) {
            log.fatal(ex);
            ex.printStackTrace();
        }
        
        JPanel errorPanel = new JPanel(new BorderLayout());
        errorPanel.add(new JLabel("<html><h1>ERROR!</h1></html>"), BorderLayout.CENTER);
        return errorPanel;
    }

    private JPanel getButtonBar() {
        JButton edit = new JButton("Open in Editor");
        edit.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                edit();
            }
        });

        JButton run = new JButton("Run");
        run.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                run();
            }
        });

        ButtonBarBuilder builder = new ButtonBarBuilder();
        builder.setDefaultDialogBorder();
        builder.addGlue();
        builder.addGridded(run);
        builder.addUnrelatedGap();
        builder.addGridded(edit);
        return builder.getPanel();
    }

    private void run() {
        JGR.MAINRCONSOLE.executeLater(rgg.generateRScript(), false);
    }

    private void edit() {
        Editor editor = new Editor();
        editor.setText(new StringBuffer(rgg.generateRScript()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane rggScrollPane;
    // End of variables declaration//GEN-END:variables
}
