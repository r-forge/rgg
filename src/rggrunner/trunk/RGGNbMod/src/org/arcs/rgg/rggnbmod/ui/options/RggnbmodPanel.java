/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package org.arcs.rgg.rggnbmod.ui.options;

import com.l2fprod.common.swing.JDirectoryChooser;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import org.arcs.rgg.rggnbmod.common.RGGProcess;
import org.openide.util.NbPreferences;

final class RggnbmodPanel extends javax.swing.JPanel {

    private final RggnbmodOptionsPanelController controller;
    private boolean valid=true;
    
    RggnbmodPanel(RggnbmodOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dirChooser = new com.l2fprod.common.swing.JDirectoryChooser();
        jLabel1 = new javax.swing.JLabel();
        locationTextField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        dirChooser.setShowingCreateDirectory(false);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, "R /bin directory:");

        locationTextField.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(browseButton, "Browse");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/arcs/rgg/rggnbmod/resources/error.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(errorLabel, "Rscript not found in !"+dirChooser.getSelectedFile());
        errorLabel.setVisible(false);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, "(e.g. \"C:\\Programme\\R\\R-2.7.0\\bin\" on Windows)");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(locationTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(browseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel2)
                    .add(errorLabel))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(locationTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(browseButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .add(18, 18, 18)
                .add(errorLabel)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        int val = dirChooser.showOpenDialog(this);
        if (val == JDirectoryChooser.APPROVE_OPTION) {
            if (checkRscriptCMD(dirChooser)) {
                SwingUtilities.invokeLater(new Runnable() {

                    public void run() {
                        locationTextField.setText(dirChooser.getSelectedFile().getAbsolutePath());
                        errorLabel.setVisible(false);
                    }
                });
            }else {
                SwingUtilities.invokeLater(new Runnable() {

                    public void run() {
                        errorLabel.setText("RScript command not found in "
                                +dirChooser.getSelectedFile()+"!");
                        errorLabel.setVisible(true);
                    }
                });
            }
        }
    }//GEN-LAST:event_browseButtonActionPerformed
    
    private boolean checkRscriptCMD(JFileChooser fileChooser) {
        File[] files = fileChooser.getSelectedFile().listFiles();
        for (File f : files) {
            if (f.isFile() && f.getName().startsWith("Rscript")) {
                valid=true;
                return true;
            }
        }
        return false;
    }
    
    void load() {
    // TODO read settings and initialize GUI
    // Example:        
    // someCheckBox.setSelected(Preferences.userNodeForPackage(RggnbmodPanel.class).getBoolean("someFlag", false));
    // or for org.openide.util with API spec. version >= 7.4:
     locationTextField.setText(NbPreferences.root().node("org/arcs/rgg/rggnbmod").get("RSCRIPTCMDDIR", ""));     
    // or:
    // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
    }

    void store() {
    // TODO store modified settings
    // Example:
    // Preferences.userNodeForPackage(RggnbmodPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
    // or for org.openide.util with API spec. version >= 7.4:
     NbPreferences.root().node("org/arcs/rgg/rggnbmod").put("RSCRIPTCMDDIR", locationTextField.getText());
    // or:
    // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
     RGGProcess.setRscriptCmdDir(NbPreferences.root().node("org/arcs/rgg/rggnbmod").get("RSCRIPTCMDDIR", ""));
    }

    boolean valid() {
        return valid;
    }

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private com.l2fprod.common.swing.JDirectoryChooser dirChooser;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField locationTextField;
    // End of variables declaration//GEN-END:variables
}
