/*
 * TargetFilePanel.java
 *
 * Created on 27. Januar 2008, 14:19
 */
package at.ac.arcs.rgg.element.maimporter.ui;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang.StringUtils;
import org.jdesktop.swingx.JXBusyLabel;

/**
 *
 * @author  ilhami
 */
public class TargetFilePanel extends javax.swing.JPanel {

    private TargetFileTableModel model;

    /** Creates new form TargetFilePanel */
    public TargetFilePanel() {
        initComponents();
    }

    /** Creates new form TargetFilePanel */
    public TargetFilePanel(TargetFileTableModel model) {
        this.model = model;
        initComponents();
        jxTable.setModel(model);
    }

    public TargetFileTableModel getModel() {
        return model;
    }

    public void setModel(TargetFileTableModel model) {
        this.model = model;
        jxTable.setModel(model);
        if (tableScrollPane.getViewport().getView() == jLabel1) {
            tableScrollPane.setViewportView(jxTable);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        targetFileEditorPanel = new javax.swing.JPanel();
        rowLabel = new javax.swing.JLabel();
        columnLabel = new javax.swing.JLabel();
        browseButton = new javax.swing.JButton();
        addRowHyperlink = new org.jdesktop.swingx.JXHyperlink();
        removeRowHyperlink = new org.jdesktop.swingx.JXHyperlink();
        addColumnHyperlink = new org.jdesktop.swingx.JXHyperlink();
        removeColumnHyperlink = new org.jdesktop.swingx.JXHyperlink();
        tableScrollPane = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jXHeader1 = new org.jdesktop.swingx.JXHeader();

        fileChooser.setMultiSelectionEnabled(true);
        //fileChooser.setFileFilter(new RGGFileExtensionFilter("Target file", new String[]{"txt"}));

        setLayout(new java.awt.BorderLayout());

        rowLabel.setText("Rows:");

        columnLabel.setText("Columns:");

        browseButton.setText("Add Microarrays");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        addRowHyperlink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/arcs/rgg/element/maimporter/ui/icon/add.png"))); // NOI18N
        addRowHyperlink.setText("");
        addRowHyperlink.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        addRowHyperlink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowHyperlinkActionPerformed(evt);
            }
        });

        removeRowHyperlink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/arcs/rgg/element/maimporter/ui/icon/remove.png"))); // NOI18N
        removeRowHyperlink.setText("");
        removeRowHyperlink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowHyperlinkActionPerformed(evt);
            }
        });

        addColumnHyperlink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/arcs/rgg/element/maimporter/ui/icon/add.png"))); // NOI18N
        addColumnHyperlink.setText("");
        addColumnHyperlink.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        addColumnHyperlink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addColumnHyperlinkActionPerformed(evt);
            }
        });

        removeColumnHyperlink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/arcs/rgg/element/maimporter/ui/icon/remove.png"))); // NOI18N
        removeColumnHyperlink.setText("");
        removeColumnHyperlink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeColumnHyperlinkActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout targetFileEditorPanelLayout = new org.jdesktop.layout.GroupLayout(targetFileEditorPanel);
        targetFileEditorPanel.setLayout(targetFileEditorPanelLayout);
        targetFileEditorPanelLayout.setHorizontalGroup(
            targetFileEditorPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(targetFileEditorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(rowLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addRowHyperlink, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(removeRowHyperlink, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(35, 35, 35)
                .add(columnLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addColumnHyperlink, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(removeColumnHyperlink, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 21, Short.MAX_VALUE)
                .add(browseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        targetFileEditorPanelLayout.setVerticalGroup(
            targetFileEditorPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(targetFileEditorPanelLayout.createSequentialGroup()
                .add(targetFileEditorPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(targetFileEditorPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, columnLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, removeColumnHyperlink, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, addColumnHyperlink, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, removeRowHyperlink, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, addRowHyperlink, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                    .add(browseButton)
                    .add(rowLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(targetFileEditorPanel, java.awt.BorderLayout.SOUTH);

        jxTable = new JTable();
        //jxTable = new JXTable();
        //jxTable.setHighlighters(new Highlighter[]{ HighlighterFactory.createAlternateStriping()});
        //jxTable.setSortable(false);
        //jxTable.setHorizontalScrollEnabled(true);
        //jxTable.setAutoStartEditOnKeyStroke(true);
        jxTable.setCellSelectionEnabled(true);
        jxTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Use \"Add Microarrays\" button to add microarray files");
        tableScrollPane.setViewportView(jLabel1);

        add(tableScrollPane, java.awt.BorderLayout.CENTER);

        jXHeader1.setDescription("Edit ...");
        jXHeader1.setTitle("Target File Editor");
        add(jXHeader1, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents
    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed

//        fileChooser.setCurrentDirectory((File) rggInstance.getProperty(LASTUSEDDIR));
        int status = fileChooser.showOpenDialog((JButton) evt.getSource());
        if (status == JFileChooser.APPROVE_OPTION) {
        }
    }//GEN-LAST:event_browseButtonActionPerformed

private void addRowHyperlinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowHyperlinkActionPerformed
    if (model == null) {
        return;
    }
    model.addRow(new Object[]{});
}//GEN-LAST:event_addRowHyperlinkActionPerformed

private void removeRowHyperlinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowHyperlinkActionPerformed
    if (jxTable.getSelectedRow() == -1 || model == null) {
        return;
    }
    model.removeRow(jxTable.getSelectedRow());
}//GEN-LAST:event_removeRowHyperlinkActionPerformed

private void addColumnHyperlinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addColumnHyperlinkActionPerformed
    if (model == null) {
        return;
    }
    String colName = JOptionPane.showInputDialog("Name of the new column?");
    if (StringUtils.isNotBlank(colName)) {
        model.addColumn(colName);
    }
}//GEN-LAST:event_addColumnHyperlinkActionPerformed

private void removeColumnHyperlinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeColumnHyperlinkActionPerformed
    if (jxTable.getSelectedColumn() == -1 || model == null) {
        return;
    }
//        model.removeColumnAndColumnData(jxTable.getSelectedColumn());
}//GEN-LAST:event_removeColumnHyperlinkActionPerformed

    public DefaultTableModel getTableModel() {
        return model;
    }

    public String[] getColumnTitles() {
        String[] titles = new String[jxTable.getColumnCount()];
        for (int i = 0; i < jxTable.getColumnCount(); i++) {
            titles[i] = model.getColumnName(i);
        }
        return titles;
    }
//    private JXTable jxTable;
    private JTable jxTable;
    JXBusyLabel busyLabel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXHyperlink addColumnHyperlink;
    private org.jdesktop.swingx.JXHyperlink addRowHyperlink;
    private javax.swing.JButton browseButton;
    private javax.swing.JLabel columnLabel;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private org.jdesktop.swingx.JXHeader jXHeader1;
    private org.jdesktop.swingx.JXHyperlink removeColumnHyperlink;
    private org.jdesktop.swingx.JXHyperlink removeRowHyperlink;
    private javax.swing.JLabel rowLabel;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JPanel targetFileEditorPanel;
    // End of variables declaration//GEN-END:variables
}
