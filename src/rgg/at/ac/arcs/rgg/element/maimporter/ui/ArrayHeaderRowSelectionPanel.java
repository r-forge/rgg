/*
 * ArrayHeaderRowSelectionPanel.java
 *
 * Created on 28. April 2008, 13:34
 */
package at.ac.arcs.rgg.element.maimporter.ui;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.LineNumberReader;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JRadioButton;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import at.ac.arcs.rgg.element.maimporter.array.ArrayInfo;
import at.ac.arcs.rgg.element.maimporter.ui.arrayheaderselection.ARCTable;
import at.ac.arcs.rgg.element.maimporter.ui.arrayheaderselection.MyDefaultTableModel;

/**
 *
 * @author  ilhami
 */
public class ArrayHeaderRowSelectionPanel extends javax.swing.JPanel {
    ArrayHeaderRowTableModelCreator modelCreator;
    private ARCTable table;

    /** Creates new form ArrayHeaderRowSelectionPanel */
    public ArrayHeaderRowSelectionPanel() {
        initComponents();
//        arrayTable.setShowGrid(false);
    }

    public ArrayHeaderRowSelectionPanel(ArrayInfo arrayInfo)
            throws IOException {
        modelCreator = new ArrayHeaderRowTableModelCreator(arrayInfo);
        table = new ARCTable();
        table.setModel(modelCreator.getTableModel());
        initComponents();
        add(table,BorderLayout.CENTER);
//        arrayTable.setShowGrid(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXHeader1 = new org.jdesktop.swingx.JXHeader();

        setLayout(new java.awt.BorderLayout());

        jXHeader1.setDescription("Description");
        jXHeader1.setTitle("Title");
        jXHeader1.setPreferredSize(new java.awt.Dimension(130, 52));
        add(jXHeader1, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents

    private class ArrayHeaderRowTableModelCreator {

        private LineNumberReader reader;
        private ArrayInfo inf;
        private MyDefaultTableModel tmodel;
        private ArrayList<ArrayList> data = new ArrayList<ArrayList>();

        public ArrayHeaderRowTableModelCreator(ArrayInfo inf) 
                throws FileNotFoundException, IOException {
            this.inf = inf;
            reader = new LineNumberReader(new FileReader(inf.getArrayFile()));
            
            ArrayList<String> colNames = new ArrayList<String>();
            colNames.add("Rows");
            
            int readrowcount = 50;
            while(inf.getHeaderLineNo() > readrowcount)
                readrowcount +=10;
            addRowsToModel(readrowcount);
            
            tmodel = new MyDefaultTableModel(colNames, data);
            
            if(inf.getHeaderLineNo()>-1)
                tmodel.setSelection(inf.getHeaderLineNo(), true); 
            
        }

        public MyDefaultTableModel getTableModel() {
            return tmodel;
        }

        public void addRowsToModel(int count) throws IOException {
            String line;
            ArrayList row;
            for (int i = 0; i < count; i++) {
                line = reader.readLine();
                if (line == null) {
                    break;
                }else{
                    row = new ArrayList();
                    row.add(line);
                    data.add(row);
                }
            }
        }
    }

    public static void main(String[] args) throws Exception {
        javax.swing.JFrame f = new javax.swing.JFrame("sdkljfls");
        f.setSize(800, 800);
        f.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);

//        f.setContentPane(new ArrayHeaderRowSelectionPanel(model));
        f.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXHeader jXHeader1;
    // End of variables declaration//GEN-END:variables
}

class RadioButtonRenderer implements TableCellRenderer {

    public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {
        if (value == null) {
            return null;
        }
        return (Component) value;
    }
}

class RadioButtonEditor extends DefaultCellEditor implements ItemListener {

    private JRadioButton button;

    public RadioButtonEditor(JCheckBox checkBox) {
        super(checkBox);
    }

    public Component getTableCellEditorComponent(JTable table, Object value,
            boolean isSelected, int row, int column) {
        if (value == null) {
            return null;
        }
        button = (JRadioButton) value;
        button.addItemListener(this);
        return (Component) value;
    }

    public Object getCellEditorValue() {
        button.removeItemListener(this);
        return button;
    }

    public void itemStateChanged(ItemEvent e) {
        super.fireEditingStopped();
    }
}

